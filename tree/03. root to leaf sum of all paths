attempt 1: 


void solve(TreeNode* r,int *ans,int sum)
{ //sum is getting passed by value
//ans is passed by reference

if(r==NULL)return ;
sum= ((sum*10)%1003+(r->val)%1003)%1003;
//sum has to be calculated in every path 
//if we reached end pt then add sum to ans ..
if(r->left==NULL && r->right==NULL)
{
    *(ans)=*ans+sum;
    return ;

}  
//solve for right 


   solve(r->right,ans,sum);
//solve for left
    solve(r->left,ans,sum);

}

int Solution::sumNumbers(TreeNode* A) {
int ans=0;
int sum=0;
solve(A,&ans,sum);
return ans;

}

***************************
void solve(int* ans,long long int num,TreeNode* root)
 { int temp=*ans;
     if(root==NULL) return;
     num=(num*10%1003+root->val%1003)%1003;
     if((root->left==NULL) && (root->right==NULL))
     
     {
         (*ans)= ((temp)%1003+  num%1003 )%1003;
         return;
     }
solve(ans,num,root->left);
solve(ans,num,root->right);
  
     
     return ;
         
         
     }
     
 
    
    
 
int Solution::sumNumbers(TreeNode* root) {
    
        
       
     
 

 int ans=0;
 long long int num=0;
 solve(&ans,num,root);
    return ans;
}

        
   



1: watch videos on utube --try to relate with knapsack problem 


soln 1: 
int dp[701][701];

int solve(string a,string b,int m,int n)


{ 

if(m<=0)
{
    if(n<=0)return 1;
    return 0;
    
    
    
}

if(n<=0)return 1;




if(dp[m][n]!=-1)return dp[m][n];

if(a[m-1]==b[n-1])
{
    dp[m][n]=solve(a,b,m-1,n-1)+solve(a,b,m-1,n);
    return dp[m][n];
    
}
else
{
    dp[m][n]=solve(a,b,m-1,n);
    return dp[m][n];
    
}




    
    
    
}



int Solution::numDistinct(string A, string B) {
    
    
    memset(dp,-1,sizeof(dp));
    int ans=solve(A,B,A.size(),B.size());
    return ans;
    
    
    
    
    
}

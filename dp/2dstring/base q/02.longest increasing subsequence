
class Solution
{
    public:
    //Function to find length of longest increasing subsequence.
    int longestSubsequence(int n, int a[])
    {
       
       int b[n];
       for(int i=0;i<n;i++)
       {b[i]=a[i];}
   sort(b,b+ n);
   
       int i,j;
       int dp[2][n+1];
       for(i=0;i<=n;i++)
       {
           
           for(j=0;j<=n;j++)
           {
               if(i==0||j==0)dp[i%2][j]=0;
               else if(a[i-1]==b[j-1] )
               {
                   if(j>1 && b[j-1]==b[j-2])dp[i%2][j]=max(dp[(i+1)%2][j],dp[i%2][j-1]);
                   else
                   
                   dp[i%2][j]=dp[(i+1)%2][j-1]+1;
                   
                   
               }
               else
               {
                   dp[i%2][j]=max(dp[(i+1)%2][j],dp[i%2][j-1]);
                   
               }
               
           }
       }
       
       return dp[n%2][n];
       
       
       
       
       
    }
};

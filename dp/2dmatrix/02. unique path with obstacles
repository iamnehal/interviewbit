int Solution::uniquePathsWithObstacles(vector<vector<int> > &A) {
    
    int i=0;
    int j=0;
    int m=A.size();
    int n=A[0].size();
    int k=0;
    int dp[m][n];
    while(1)
    {
        if(i>=m)break;
        
        
        else if (A[i][0]==1)
        {
            for(k=i;k<m;k++)
            dp[k][0]=0;
            i=k;
            
        }
        
        else
        {
            dp[i][0]=1;
            i++;
            
        }
        
        
        
    }
    
       while(1)
    {
        if(j>=n)break;
        
        
        else if (A[0][j]==1)
        {
            for(k=j;k<n;k++)
            dp[0][k]=0;
            j=k;
            
        }
        
        else
        {
            dp[0][j]=1;
            j++;
            
        }
        
        
        
    }
    
    
    for(i=1;i<m;i++)
    {
        for(j=1;j<n;j++)
        {
            if(A[i][j]==1)dp[i][j]=0;
            else
            {
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
                
            }
            
            
        }
        
        
    }
    
    return dp[m-1][n-1];
    
    
}
